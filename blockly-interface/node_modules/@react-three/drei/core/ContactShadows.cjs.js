"use strict";var e=require("@babel/runtime/helpers/extends"),r=require("react"),t=require("three"),a=require("@react-three/fiber"),n=require("three-stdlib");function o(e){var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var a=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,a.get?a:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var i=o(r),u=o(t);const l=i.forwardRef((({scale:r=10,frames:t=1/0,opacity:o=1,width:l=1,height:s=1,blur:c=1,near:d=0,far:f=10,resolution:h=512,smooth:m=!0,color:g="#000000",depthWrite:p=!1,renderOrder:v,...b},M)=>{const w=i.useRef(null),y=a.useThree((e=>e.scene)),T=a.useThree((e=>e.gl)),R=i.useRef(null);l*=Array.isArray(r)?r[0]:r||1,s*=Array.isArray(r)?r[1]:r||1;const[S,x,O,C,P,j,q]=i.useMemo((()=>{const e=new u.WebGLRenderTarget(h,h),r=new u.WebGLRenderTarget(h,h);r.texture.generateMipmaps=e.texture.generateMipmaps=!1;const t=new u.PlaneGeometry(l,s).rotateX(Math.PI/2),a=new u.Mesh(t),o=new u.MeshDepthMaterial;o.depthTest=o.depthWrite=!1,o.onBeforeCompile=e=>{e.uniforms={...e.uniforms,ucolor:{value:new u.Color(g)}},e.fragmentShader=e.fragmentShader.replace("void main() {","uniform vec3 ucolor;\n           void main() {\n          "),e.fragmentShader=e.fragmentShader.replace("vec4( vec3( 1.0 - fragCoordZ ), opacity );","vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );")};const i=new u.ShaderMaterial(n.HorizontalBlurShader),c=new u.ShaderMaterial(n.VerticalBlurShader);return c.depthTest=i.depthTest=!1,[e,t,o,a,i,c,r]}),[h,l,s,r,g]),E=e=>{C.visible=!0,C.material=P,P.uniforms.tDiffuse.value=S.texture,P.uniforms.h.value=1*e/256,T.setRenderTarget(q),T.render(C,R.current),C.material=j,j.uniforms.tDiffuse.value=q.texture,j.uniforms.v.value=1*e/256,T.setRenderTarget(S),T.render(C,R.current),C.visible=!1};let W,k,A=0;return a.useFrame((()=>{R.current&&(t===1/0||A<t)&&(A++,W=y.background,k=y.overrideMaterial,w.current.visible=!1,y.background=null,y.overrideMaterial=O,T.setRenderTarget(S),T.render(y,R.current),E(c),m&&E(.4*c),T.setRenderTarget(null),w.current.visible=!0,y.overrideMaterial=k,y.background=W)})),i.useImperativeHandle(M,(()=>w.current),[]),i.createElement("group",e({"rotation-x":Math.PI/2},b,{ref:w}),i.createElement("mesh",{renderOrder:v,geometry:x,scale:[1,-1,1],rotation:[-Math.PI/2,0,0]},i.createElement("meshBasicMaterial",{transparent:!0,map:S.texture,opacity:o,depthWrite:p})),i.createElement("orthographicCamera",{ref:R,args:[-l/2,l/2,s/2,-s/2,d,f]}))}));exports.ContactShadows=l;
