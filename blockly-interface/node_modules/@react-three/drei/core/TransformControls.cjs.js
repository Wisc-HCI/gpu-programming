"use strict";var e=require("@babel/runtime/helpers/extends"),t=require("@react-three/fiber"),r=require("react"),n=require("three"),o=require("three-stdlib");function s(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var a=s(r),u=s(n);const c=a.forwardRef((({children:r,domElement:n,onChange:s,onMouseDown:c,onMouseUp:i,onObjectChange:l,object:f,makeDefault:d,camera:h,enabled:m,axis:v,mode:E,translationSnap:g,rotationSnap:b,scaleSnap:p,space:L,size:j,showX:w,showY:O,showZ:T,...y},D)=>{const C=t.useThree((e=>e.controls)),R=t.useThree((e=>e.gl)),S=t.useThree((e=>e.events)),q=t.useThree((e=>e.camera)),x=t.useThree((e=>e.invalidate)),z=t.useThree((e=>e.get)),M=t.useThree((e=>e.set)),U=h||q,k=n||S.connected||R.domElement,P=a.useMemo((()=>new o.TransformControls(U,k)),[U,k]),X=a.useRef(null);a.useLayoutEffect((()=>(f?P.attach(f instanceof u.Object3D?f:f.current):X.current instanceof u.Object3D&&P.attach(X.current),()=>{P.detach()})),[f,r,P]),a.useEffect((()=>{if(C){const e=e=>C.enabled=!e.value;return P.addEventListener("dragging-changed",e),()=>P.removeEventListener("dragging-changed",e)}}),[P,C]);const Y=a.useRef(),Z=a.useRef(),F=a.useRef(),A=a.useRef();return a.useLayoutEffect((()=>{Y.current=s}),[s]),a.useLayoutEffect((()=>{Z.current=c}),[c]),a.useLayoutEffect((()=>{F.current=i}),[i]),a.useLayoutEffect((()=>{A.current=l}),[l]),a.useEffect((()=>{const e=e=>{x(),null==Y.current||Y.current(e)},t=e=>null==Z.current?void 0:Z.current(e),r=e=>null==F.current?void 0:F.current(e),n=e=>null==A.current?void 0:A.current(e);return P.addEventListener("change",e),P.addEventListener("mouseDown",t),P.addEventListener("mouseUp",r),P.addEventListener("objectChange",n),()=>{P.removeEventListener("change",e),P.removeEventListener("mouseDown",t),P.removeEventListener("mouseUp",r),P.removeEventListener("objectChange",n)}}),[x,P]),a.useEffect((()=>{if(d){const e=z().controls;return M({controls:P}),()=>M({controls:e})}}),[d,P]),a.createElement(a.Fragment,null,a.createElement("primitive",{ref:D,object:P,enabled:m,axis:v,mode:E,translationSnap:g,rotationSnap:b,scaleSnap:p,space:L,size:j,showX:w,showY:O,showZ:T}),a.createElement("group",e({ref:X},y),r))}));exports.TransformControls=c;
