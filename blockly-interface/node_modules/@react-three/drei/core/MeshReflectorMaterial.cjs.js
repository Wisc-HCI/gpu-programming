"use strict";var e=require("@babel/runtime/helpers/extends"),t=require("react"),r=require("three"),a=require("@react-three/fiber"),n=require("react-merge-refs"),i=require("../materials/BlurPass.cjs.js"),s=require("../materials/MeshReflectorMaterial.cjs.js");function o(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var a=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,a.get?a:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var l=o(t);const u=l.forwardRef((({mixBlur:t=0,mixStrength:o=1,resolution:u=256,blur:d=[0,0],minDepthThreshold:c=.9,maxDepthThreshold:p=1,depthScale:m=0,depthToBlurRatioBias:h=.25,mirror:x=0,distortion:f=1,mixContrast:M=1,distortionMap:T,reflectorOffset:S=0,...y},w)=>{a.extend({MeshReflectorMaterialImpl:s.MeshReflectorMaterial});const b=a.useThree((({gl:e})=>e)),R=a.useThree((({camera:e})=>e)),g=a.useThree((({scene:e})=>e)),v=(d=Array.isArray(d)?d:[d,d])[0]+d[1]>0,D=l.useRef(null),[B]=l.useState((()=>new r.Plane)),[j]=l.useState((()=>new r.Vector3)),[U]=l.useState((()=>new r.Vector3)),[O]=l.useState((()=>new r.Vector3)),[P]=l.useState((()=>new r.Matrix4)),[V]=l.useState((()=>new r.Vector3(0,0,-1))),[E]=l.useState((()=>new r.Vector4)),[F]=l.useState((()=>new r.Vector3)),[W]=l.useState((()=>new r.Vector3)),[_]=l.useState((()=>new r.Vector4)),[I]=l.useState((()=>new r.Matrix4)),[q]=l.useState((()=>new r.PerspectiveCamera)),k=l.useCallback((()=>{var e;const t=D.current.parent||(null==(e=D.current)?void 0:e.__r3f.parent);if(!t)return;if(U.setFromMatrixPosition(t.matrixWorld),O.setFromMatrixPosition(R.matrixWorld),P.extractRotation(t.matrixWorld),j.set(0,0,1),j.applyMatrix4(P),U.addScaledVector(j,S),F.subVectors(U,O),F.dot(j)>0)return;F.reflect(j).negate(),F.add(U),P.extractRotation(R.matrixWorld),V.set(0,0,-1),V.applyMatrix4(P),V.add(O),W.subVectors(U,V),W.reflect(j).negate(),W.add(U),q.position.copy(F),q.up.set(0,1,0),q.up.applyMatrix4(P),q.up.reflect(j),q.lookAt(W),q.far=R.far,q.updateMatrixWorld(),q.projectionMatrix.copy(R.projectionMatrix),I.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),I.multiply(q.projectionMatrix),I.multiply(q.matrixWorldInverse),I.multiply(t.matrixWorld),B.setFromNormalAndCoplanarPoint(j,U),B.applyMatrix4(q.matrixWorldInverse),E.set(B.normal.x,B.normal.y,B.normal.z,B.constant);const r=q.projectionMatrix;_.x=(Math.sign(E.x)+r.elements[8])/r.elements[0],_.y=(Math.sign(E.y)+r.elements[9])/r.elements[5],_.z=-1,_.w=(1+r.elements[10])/r.elements[14],E.multiplyScalar(2/E.dot(_)),r.elements[2]=E.x,r.elements[6]=E.y,r.elements[10]=E.z+1,r.elements[14]=E.w}),[R,S]),[C,L,z,A]=l.useMemo((()=>{const e={minFilter:r.LinearFilter,magFilter:r.LinearFilter,type:r.HalfFloatType},a=new r.WebGLRenderTarget(u,u,e);a.depthBuffer=!0,a.depthTexture=new r.DepthTexture(u,u),a.depthTexture.format=r.DepthFormat,a.depthTexture.type=r.UnsignedShortType;const n=new r.WebGLRenderTarget(u,u,e);return[a,n,new i.BlurPass({gl:b,resolution:u,width:d[0],height:d[1],minDepthThreshold:c,maxDepthThreshold:p,depthScale:m,depthToBlurRatioBias:h}),{mirror:x,textureMatrix:I,mixBlur:t,tDiffuse:a.texture,tDepth:a.depthTexture,tDiffuseBlur:n.texture,hasBlur:v,mixStrength:o,minDepthThreshold:c,maxDepthThreshold:p,depthScale:m,depthToBlurRatioBias:h,distortion:f,distortionMap:T,mixContrast:M,"defines-USE_BLUR":v?"":void 0,"defines-USE_DEPTH":m>0?"":void 0,"defines-USE_DISTORTION":T?"":void 0}]}),[b,d,I,u,x,v,t,o,c,p,m,h,f,T,M]);return a.useFrame((()=>{var e;const t=D.current.parent||(null==(e=D.current)?void 0:e.__r3f.parent);if(!t)return;t.visible=!1;const r=b.xr.enabled,a=b.shadowMap.autoUpdate;k(),b.xr.enabled=!1,b.shadowMap.autoUpdate=!1,b.setRenderTarget(C),b.state.buffers.depth.setMask(!0),b.autoClear||b.clear(),b.render(g,q),v&&z.render(b,C,L),b.xr.enabled=r,b.shadowMap.autoUpdate=a,t.visible=!0,b.setRenderTarget(null)})),l.createElement("meshReflectorMaterialImpl",e({attach:"material",key:"key"+A["defines-USE_BLUR"]+A["defines-USE_DEPTH"]+A["defines-USE_DISTORTION"],ref:n([D,w])},A,y))}));exports.MeshReflectorMaterial=u;
